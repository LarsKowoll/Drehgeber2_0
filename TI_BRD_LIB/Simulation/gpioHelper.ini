/**
  ******************************************************************************
  * @file    	gpioHelper.ini
  * @author  	Nils Schoenherr
  * @version  V1.0
  * @date     16.01.2017
  * @brief    For change between input and output
  ******************************************************************************
  */


DEFINE int IOADR
	IOADR = 0x40012000;


/************************************
WORKAROUND for compatibility to F4
*************************************/

FUNC void cr_helper(){
	unsigned int tmp;
	unsigned int moder, otyper;
  unsigned int outL;
  unsigned int outH;
  int i;


	moder = _RWORD(IOADR+(0x04*6));
	otyper = _RBYTE(IOADR+(0x04*6+3));
	outL = 0;
	outH = 0;
	for(i=0; i<8; i++){
		//go through all pins an get config
		switch(moder&0x3){
			case 0:  //input
				outL &= ~((0xf)<<(4*i));
				outL |= ((0x4)<<(4*i));
			break;
			case 1:  //output
				outL &= ~((0xf)<<(4*i));
				outL |= ((0x3)<<(4*i));
				//check push pull
				if(otyper&(1<<i)){
					outL |= ((0x4)<<(4*i));
				}
			break;
			case 2: //alternate function
				outL &= ~((0xf)<<(4*i));
				outL |= ((0xb)<<(4*i));
				//check push pull
				if(otyper&(1<<i)){
					outL |= ((0x4)<<(4*i));
				}
			break;
			case 3: //analog mode
				outL &= ~((0xf)<<(4*i));
			break;
		}
		moder = moder >> 2;
	}
	_WDWORD(IOADR,     outL);
}

SIGNAL void moder_watcher(void){
	while(1){
		wwatch(IOADR+(0x04*6));
		cr_helper();
	}
}

SIGNAL void otyper_watcher(void){
	while(1){
		wwatch(IOADR+(0x04*6+3));
		cr_helper();
	}
}

moder_watcher();

otyper_watcher();
